<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Hojjat&#x27;s Blog</title>
    <link href="https://hojjatabdollahi.github.io/feed.xml" rel="self" />
    <link href="https://hojjatabdollahi.github.io" />
    <updated>2021-01-08T08:41:57-07:00</updated>
    <author>
        <name>Hojjat</name>
    </author>
    <id>https://hojjatabdollahi.github.io</id>

    <entry>
        <title>How to install Interception Tools on Pop!_OS</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/how-to-install-interception-tools-on-pop_os.html"/>
        <id>https://hojjatabdollahi.github.io/how-to-install-interception-tools-on-pop_os.html</id>
            <category term="sh"/>
            <category term="linux"/>

        <updated>2021-01-08T08:41:57-07:00</updated>
            <summary>
                <![CDATA[
                    Interception ToolsWhat is Interception Tools?It's a software that lives between the kernel and the X server. It processes the input events and can modify it. You can modify the keyboard layout, or make the keyboard act like a mouse, or... Pressing Esc is hard. Pressing&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2>Interception Tools</h2>
<h3>What is Interception Tools?</h3>
<p>It's a software that lives between the kernel and the X server. It processes the input events and can modify it.</p>
<h3>Why is it useful?</h3>
<p>You can modify the keyboard layout, or make the keyboard act like a mouse, or...</p>
<h3>Why did I get interested in it?</h3>
<p>Pressing Esc is hard. Pressing ctrl is hard. I use vim. </p>
<h3>Why did I write this post? </h3>
<p>Because I'm sure I will be coming back to this and the main developers apparently hate Ubuntu!</p>
<h2>Installation</h2>
<p><code class="language-bash">sudo apt install libudev-dev libyaml-cpp-dev libevdev-dev cmake</code></p>
<p>I also needed to install the boost libraries:</p>
<p><code class="language-bash">sudo apt install libboost-all-dev</code></p>
<p>Now, clone the Interception Tools repo, compile and install it:</p>
<pre><code class="language-bash">git clone <a href="https://gitlab.com/interception/linux/tools">https://gitlab.com/interception/linux/tools</a></code><br><code class="language-bash">cd tools</code><br><code class="language-bash">mkdir build</code><br><code class="language-bash">cd build</code><br><code class="language-bash">cmake ..</code><br><code class="language-bash">make </code><br><code class="language-bash">sudo make install</code></pre>
<p>Now, install the Capslock to Escape plugin for it:</p>
<pre><code class="language-bash">git clone https://gitlab.com/interception/linux/plugins/caps2esc</code><br><code class="language-bash">cd caps2esc</code><br><code class="language-bash">mkdir build</code><br><code class="language-bash">cd build</code><br><code class="language-bash">cmake ..</code><br><code class="language-bash">make </code><br><code class="language-bash">sudo make install</code></pre>
<p>Now, we need to configure Interception Tools to use the caps2esc plugin:</p>
<pre><code class="language-bash">sudo mkdir -p /etc/interception/udevmon.d/</code><br><code class="language-bash">sudo vim /etc/interception/udevmon.d/c2e.yaml</code></pre>
<p>And copy the following in it:</p>
<pre>- JOB: intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE<br>  DEVICE:<br>    LINK: /dev/input/by-id/usb-Cooler_Master_Technology_Inc._MasterKeys_S-event-kbd</pre>
<p>In this case I am referring to my exact keyboard. You can find your keyboard using:</p>
<p><code class="language-bash">ls /dev/input/by-id | grep kbd</code></p>
<p>My laptop keyboard was under:</p>
<p><code class="language-bash">ls /dev/input/by-path | grep kbd</code></p>
<p>That being said, it is probably possible to use a more general config like this:</p>
<pre>- JOB: "intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE"<br>  DEVICE:<br>    EVENTS:<br>      EV_KEY: [KEY_CAPSLOCK, KEY_ESC]</pre>
<p>Now that the configuration is done we need to add udevmon to the services so that it starts with the system.</p>
<p>Open this file:</p>
<p><code class="language-bash">sudo vim /etc/systemd/system/udevmon.service</code></p>
<p>and copy the following in it:</p>
<pre>[Unit]<br>Description=udevmon<br>Wants=systemd-udev-settle.service<br>After=systemd-udev-settle.service<br><br>[Service]<br>ExecStart=/usr/bin/nice -n -20 /usr/local/bin/udevmon <br><br>[Install]<br>WantedBy=multi-user.target</pre>
<p>Make sure that the address for `udevmon` is correct:</p>
<p><code class="language-bash">which udevmon</code></p>
<p>Make sure to enable this service:</p>
<p><code class="language-bash">sudo systemctl enable --now udevmon</code></p>
<p>Also make sure to add the user to all the groups that are relevant. (not sure which one is relevant):</p>
<pre><code class="language-bash">sudo usermod -a -G sudo $USER</code><br><code class="language-bash">sudo gpasswd -a $USER input</code><br><code class="language-bash">usermod -a -G plugdev $USER</code></pre>
<h2>Usage</h2>
<p>After a reboot, the Esc key acts like CapsLock key. And the CapsLock key acts like both the Esc key and the Ctrl key. If you tap the CapsLock key, it will register as Esc, and if you hold it down and press another key it will register it as Ctrl and perform a combination. So, for example CapsLock+C will copy, but tapping the CapsLock key, will be just an Esc event.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Rust: Ref, Deref, Clone</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/rust-ref-deref-clone.html"/>
        <id>https://hojjatabdollahi.github.io/rust-ref-deref-clone.html</id>
            <category term="rust"/>

        <updated>2020-12-21T21:39:51-07:00</updated>
            <summary>
                <![CDATA[
                    To convert `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;` use `as_deref()` To convert `&amp;Option&lt;T&gt;` to `Option&lt;&amp;T&gt;` use `as_deref()` To convert `Option&lt;&amp;T&gt;` to `Option&lt;T&gt;` use `cloned()` I don't know what is the difference between `as_ref()` and `as_deref()` when it comes to converting `&amp;Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`. 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>To convert `<code>Option&lt;T&gt;</code>` to `<code>Option&lt;&amp;T&gt;</code>` use `<code>as_deref()</code>`</p>
<p>To convert `<code>&amp;Option&lt;T&gt;</code>` to `<code>Option&lt;&amp;T&gt;</code>` use `<code>as_deref()</code>`</p>
<p>To convert `<code>Option&lt;&amp;T&gt;</code>` to `<code>Option&lt;T&gt;</code>` use `<code>cloned()</code>`</p>
<p>I don't know what is the difference between `<code>as_ref()</code>` and `<code>as_deref()</code>` when it comes to converting `<code>&amp;Option&lt;T&gt;</code>` to `<code>Option&lt;&amp;T&gt;</code>`. </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>The terminal prints ^M instead of a new line!</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/the-terminal-prints-m-instead-of-a-new-line.html"/>
        <id>https://hojjatabdollahi.github.io/the-terminal-prints-m-instead-of-a-new-line.html</id>
            <category term="sh"/>
            <category term="linux"/>

        <updated>2020-05-21T12:27:43-06:00</updated>
            <summary>
                <![CDATA[
                    It is probably because some program didn't exit properly. Thankfully, there is a program called stty that can fix this. Here is how to reset all modes to reasonable values for the current terminal: stty sane You can see all settings for the curent terminal&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>It is probably because some program didn't exit properly. </p>
<p>Thankfully, there is a program called <code>stty</code> that can fix this. </p>
<p>Here is how to reset all modes to reasonable values for the current terminal:</p>
<p><code class="language-bash">stty sane</code></p>
<p>You can see all settings for the curent terminal like so:</p>
<p><code class="language-bash">stty -a</code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Fix Scrollilng Speed on Ubuntu 18.04</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/fix-scrollilng-speed-on-ubuntu-1804.html"/>
        <id>https://hojjatabdollahi.github.io/fix-scrollilng-speed-on-ubuntu-1804.html</id>
            <category term="sh"/>
            <category term="linux"/>

        <updated>2020-05-20T11:28:02-06:00</updated>
            <summary>
                <![CDATA[
                    Install `imwheel`: sudo apt install imwheel Create a file with this content: #!/bin/bash # Version 0.1 Tuesday, 07 May 2013 # Comments and complaints http://www.nicknorton.net # GUI for mouse wheel speed using imwheel in Gnome # imwheel needs to be installed for this script to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Install `imwheel`:</p>
<p>sudo apt install imwheel</p>
<p>Create a file with this content:</p>
<p><code class="language-bash">#!/bin/bash</code><br><code class="language-bash"># Version 0.1 Tuesday, 07 May 2013</code><br><code class="language-bash"># Comments and complaints http://www.nicknorton.net</code><br><code class="language-bash"># GUI for mouse wheel speed using imwheel in Gnome</code><br><code class="language-bash"># imwheel needs to be installed for this script to work</code><br><code class="language-bash"># sudo apt-get install imwheel</code><br><code class="language-bash"># Pretty much hard wired to only use a mouse with</code><br><code class="language-bash"># left, right and wheel in the middle.</code><br><code class="language-bash"># If you have a mouse with complications or special needs,</code><br><code class="language-bash"># use the command xev to find what your wheel does.</code><br><code class="language-bash">#</code><br><code class="language-bash">### see if imwheel config exists, if not create it ###</code><br><code class="language-bash">if [ ! -f ~/.imwheelrc ]</code><br><code class="language-bash">then</code><br><br><code class="language-bash">cat &gt;~/.imwheelrc&lt;&lt;EOF</code><br><code class="language-bash">".*"</code><br><code class="language-bash">None, Up, Button4, 1</code><br><code class="language-bash">None, Down, Button5, 1</code><br><code class="language-bash">Control_L, Up, Control_L|Button4</code><br><code class="language-bash">Control_L, Down, Control_L|Button5</code><br><code class="language-bash">Shift_L, Up, Shift_L|Button4</code><br><code class="language-bash">Shift_L, Down, Shift_L|Button5</code><br><code class="language-bash">EOF</code><br><br><code class="language-bash">fi</code><br><code class="language-bash">##########################################################</code><br><br><code class="language-bash">CURRENT_VALUE=$(awk -F 'Button4,' '{print $2}' ~/.imwheelrc)</code><br><br><code class="language-bash">NEW_VALUE=$(zenity --scale --window-icon=info --ok-label=Apply --title="Wheelies" --text "Mouse wheel speed:" --min-value=1 --max-value=100 --value="$CURRENT_VALUE" --step 1)</code><br><br><code class="language-bash">if [ "$NEW_VALUE" == "" ];</code><br><code class="language-bash">then exit 0</code><br><code class="language-bash">fi</code><br><br><code class="language-bash">sed -i "s/\($TARGET_KEY *Button4, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button4, and write new value.</code><br><code class="language-bash">sed -i "s/\($TARGET_KEY *Button5, *\).*/\1$NEW_VALUE/" ~/.imwheelrc # find the string Button5, and write new value.</code><br><br><code class="language-bash">cat ~/.imwheelrc</code><br><code class="language-bash">imwheel -kill</code></p>
<p>Run it and set the scroll speed from 1 to 2. I think this would do. I have a feeling that I should add `imwheel` to the startup to fix the speed after the boot. </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>CouchDB on Ubuntu 18.04</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/couchdb-on-ubuntu-1804.html"/>
        <id>https://hojjatabdollahi.github.io/couchdb-on-ubuntu-1804.html</id>
            <category term="sh"/>
            <category term="linux"/>
            <category term="curl"/>
            <category term="couchdb"/>

        <updated>2020-05-20T09:41:51-06:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://hojjatabdollahi.github.io/media/posts/16/CouchDB.svg" alt="" />
                    Install CouchDB using snap: sudo snap install couchdb Set the admin pass: sudo snap set couchdb admin=1 Give it permissions that it needs: sudo snap connect couchdb:mount-observe sudo snap connect couchdb:process-control Start the service: sudo snap start couchdb Go to this address in your browser:&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://hojjatabdollahi.github.io/media/posts/16/CouchDB.svg" alt="" />
                <p>Install CouchDB using snap:</p>
<p><code class="language-bash">sudo snap install couchdb</code></p>
<p>Set the admin pass:</p>
<p><code class="language-bash">sudo snap set couchdb admin=1</code></p>
<p>Give it permissions that it needs:</p>
<p><code class="language-bash">sudo snap connect couchdb:mount-observe</code></p>
<p><code class="language-bash">sudo snap connect couchdb:process-control</code></p>
<p>Start the service:</p>
<p><code class="language-bash">sudo snap start couchdb</code></p>
<p>Go to this address in your browser: `<a href="http://localhost:5984/_utils&#96;">http://localhost:5984/_utils</a>`</p>
<p>Install `jq` for prettifying the output json</p>
<p><code class="language-bash">sudo apt install jq</code></p>
<p>Create 3 files. </p>
<p>1- call this file `get`</p>
<p><code class="language-bash">#!/bin/bash</code></p>
<p><code class="language-bash">curl -sX GET http://admin:1@localhost:5984/$1 | jq</code></p>
<p>2- call this file `put`</p>
<p><code class="language-bash">#!/bin/bash</code></p>
<p><code class="language-bash">curl -sX PUT http://admin:1@localhost:5984/$1 | jq</code></p>
<p>3- call this file `del`</p>
<p><code class="language-bash">#!/bin/bash</code></p>
<p><code class="language-bash">curl -sX DELETE http://admin:1@localhost:5984/$1 | jq</code></p>
<p>Make these executable and add them to a folder that exists in the  $PATH.</p>
<p>The `-s` in the `curl` command is there to not show the download progressbar. Otherwise, the output of these files will have some extra lines in the begninning that makes it ugly.</p>
<p>Now you can run commands like this:</p>
<p><code class="language-bash">get _all_dbs</code></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Changing the SWAP file size in Ubuntu 18.045</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/chaning-the-swap-file-size-in-ubuntu-18045.html"/>
        <id>https://hojjatabdollahi.github.io/chaning-the-swap-file-size-in-ubuntu-18045.html</id>
            <category term="sh"/>
            <category term="linux"/>

        <updated>2020-07-10T09:19:50-06:00</updated>
            <summary>
                <![CDATA[
                    If you install linux without a dedicated swap partition you will get a swap file. The swap file is in root: /swapfile To see the size you can run swapon --show You can turn off swap with sudo swapoff /swapfile If you run `free -h`&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>If you install linux without a dedicated swap partition you will get a swap file. The swap file is in root:<br><code class="language-bash">/swapfile</code><br><br>To see the size you can run<br><code class="language-bash">swapon --show</code><br><br>You can turn off swap with<br><code class="language-bash">sudo swapoff /swapfile</code><br><br>If you run <code class="language-bash">`free -h`</code> you will see that you have 0 swap<br><br>Now you can allocate more space to that swapfile<br><code class="language-bash">sudo fallocate -l 20G /swapfile</code><br><br>Now make that file a swap again<br><code class="language-bash">sudo mkswap /swapfile</code><br><br>And now turn on swap again<br><code class="language-bash">sudo swapon /swapfile</code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Docker with a volume with user-level permissions</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/docker-with-a-volume-with-user-level-pre.html"/>
        <id>https://hojjatabdollahi.github.io/docker-with-a-volume-with-user-level-pre.html</id>
            <category term="linux"/>
            <category term="docker"/>

        <updated>2020-04-27T17:07:35-06:00</updated>
            <summary>
                <![CDATA[
                    If you mount a folder in your docker all the files created in it will be owned by the root. To fix this add the following to the Dockerfile ARG USER_ID ARG GROUP_ID RUN addgroup --gid $GROUP_ID user RUN adduser --disabled-password --gecos '' --uid $USER_ID&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>If you mount a folder in your docker all the files created in it will be owned by the root. To fix this add the following to the Dockerfile</p>
<p><code class="language-bash">ARG USER_ID</code><br><code class="language-bash">ARG GROUP_ID</code><br><br><code class="language-bash">RUN addgroup --gid $GROUP_ID user</code><br><code class="language-bash">RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID user</code><br><code class="language-bash">USER user</code></p>
<p>and then create the image like so:</p>
<p><code class="language-bash">docker build -t tensorflow112 --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) -f Dockerfiles/ubuntu-shared-cuda .</code></p>
<p>create the instance like so:</p>
<p><code class="language-bash">docker run -it --name tf112 --user "$(id -u):$(id -g)" -v $(pwd):/home tensorflow112</code></p>
<p>and you can start it later like so:</p>
<p><code class="language-bash">docker start -i tf112</code></p>
<p>How to give it a password:</p>
<p><code class="language-bash">docker exec -it --user root tf112 bash</code><br><code class="language-bash">echo 'user:1' | chpasswd</code></p>
<p>How to give the user sudo permission:</p>
<p><code class="language-bash">docker exec -it --user root tf112 bash</code><br><code class="language-bash">usermod -aG sudo user</code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How to merge two PDFs in Ubuntu 18.04</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/how-to-merge-two-pdfs-in-ubuntu-1804.html"/>
        <id>https://hojjatabdollahi.github.io/how-to-merge-two-pdfs-in-ubuntu-1804.html</id>
            <category term="sh"/>
            <category term="linux"/>

        <updated>2020-04-20T16:47:14-06:00</updated>
            <summary>
                <![CDATA[
                    Install pdftk: sudo add-apt-repository ppa:malteworld/ppa sudo apt install pdftk Then simply call it: pdftk file1.pdf file2.pdf cat output merged_output.pdf 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Install <code>pdftk</code>:</p>
<p><code class="language-bash">sudo add-apt-repository ppa:malteworld/ppa</code></p>
<p><code class="language-bash">sudo apt install pdftk</code></p>
<p>Then simply call it:</p>
<p><code class="language-bash">pdftk file1.pdf file2.pdf cat output merged_output.pdf</code></p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How to switch between different versions of g++</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/how-to-switch-between-different-versions-of-g.html"/>
        <id>https://hojjatabdollahi.github.io/how-to-switch-between-different-versions-of-g.html</id>
            <category term="linux"/>

        <updated>2020-04-07T11:37:31-06:00</updated>
            <summary>
                <![CDATA[
                    I needed to compile an old code and needed to use older versions of g++. Here is how I did it: sudo apt install g++-4.8 g++-5 g++-6 g++-7 sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 1 sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 1 sudo update-alternatives --install&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I needed to compile an old code and needed to use older versions of g++. Here is how I did it:</p>
<ul>
<li>First, install the older version</li>
</ul>
<p><code class="language-bash">sudo apt install g++-4.8 g++-5 g++-6 g++-7</code></p>
<ul>
<li>Then, tell the system that there is a new alternative</li>
</ul>
<p><code class="language-bash">sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 1</code><br><code class="language-bash">sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 1</code><br><code class="language-bash">sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 1</code></p>
<ul>
<li>Finally you can choose which g++ you want to use:</li>
</ul>
<p><code class="language-bash">sudo upate-alternatives --config g++</code></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cisco AnyConnect VPN in Linux (Ubuntu 18.04,19.10)</title>
        <author>
            <name>Hojjat</name>
        </author>
        <link href="https://hojjatabdollahi.github.io/cisco-anyconnect-vpn-in-linux-ubuntu-1910.html"/>
        <id>https://hojjatabdollahi.github.io/cisco-anyconnect-vpn-in-linux-ubuntu-1910.html</id>
            <category term="linux"/>
            <category term="cisco"/>

        <updated>2020-03-24T10:56:53-06:00</updated>
            <summary>
                <![CDATA[
                    I’m writing this here for my future use. Install these: Ubuntu 18.04: sudo apt-get install openconnect lib32ncurses5 lib32tinfo5 lib32z1 libc6-i386 libpkcs11-helper1 openvpn vpnc-scripts net-tools Ubuntu 19.10: sudo apt-get install openconnect lib32ncurses6 lib32tinfo6 lib32z1 libc6-i386 libpkcs11-helper1 openvpn vpnc-scripts net-tools Download and unzip this. Go to the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><em>I’m writing this here for my future use.</em><br><br>Install these:<br>Ubuntu 18.04:</p>
<p><code class="language-bash">sudo apt-get install openconnect lib32ncurses5 lib32tinfo5 lib32z1 libc6-i386 libpkcs11-helper1 openvpn vpnc-scripts net-tools</code></p>
<p>Ubuntu 19.10:<br><code class="language-bash">sudo apt-get install openconnect lib32ncurses6 lib32tinfo6 lib32z1 libc6-i386 libpkcs11-helper1 openvpn vpnc-scripts net-tools</code><br><br>Download and unzip <a href="https://uci.service-now.com/sys_attachment.do?sys_id=3e869ef2db082b0054e7f236bf961900" target="_blank" rel="noopener noreferrer">this</a>.<br><br>Go to the vpn folder and run ./vpn_install.sh then install the vpn.<br><br>Finally run the vpn using:<br><br><code class="language-bash">/opt/cisco/anyconnect/bin/vpnui</code><br><br>For the university of Denver I use this URL to connect to:<br><br><code>https://vpn-external.du.edu:443</code><br><br>It then will ask for username and password, I use my ID number and password here.</p>
            ]]>
        </content>
    </entry>
</feed>
